// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package tendermintv1

import (
	types "cosmossdk.io/api/tendermint/types"
	fmt "fmt"
	v1 "github.com/bianjieai/tibc-go/api/tibc/core/client/v1"
	v11 "github.com/bianjieai/tibc-go/api/tibc/core/commitment/v1"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	_go "github.com/cosmos/ics23/go"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_ClientState_7_list)(nil)

type _ClientState_7_list struct {
	list *[]*_go.ProofSpec
}

func (x *_ClientState_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ClientState_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ClientState_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*_go.ProofSpec)
	(*x.list)[i] = concreteValue
}

func (x *_ClientState_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*_go.ProofSpec)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ClientState_7_list) AppendMutable() protoreflect.Value {
	v := new(_go.ProofSpec)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ClientState_7_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ClientState_7_list) NewElement() protoreflect.Value {
	v := new(_go.ProofSpec)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ClientState_7_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ClientState                  protoreflect.MessageDescriptor
	fd_ClientState_chain_id         protoreflect.FieldDescriptor
	fd_ClientState_trust_level      protoreflect.FieldDescriptor
	fd_ClientState_trusting_period  protoreflect.FieldDescriptor
	fd_ClientState_unbonding_period protoreflect.FieldDescriptor
	fd_ClientState_max_clock_drift  protoreflect.FieldDescriptor
	fd_ClientState_latest_height    protoreflect.FieldDescriptor
	fd_ClientState_proof_specs      protoreflect.FieldDescriptor
	fd_ClientState_merkle_prefix    protoreflect.FieldDescriptor
	fd_ClientState_time_delay       protoreflect.FieldDescriptor
)

func init() {
	file_tibc_lightclients_tendermint_v1_tendermint_proto_init()
	md_ClientState = File_tibc_lightclients_tendermint_v1_tendermint_proto.Messages().ByName("ClientState")
	fd_ClientState_chain_id = md_ClientState.Fields().ByName("chain_id")
	fd_ClientState_trust_level = md_ClientState.Fields().ByName("trust_level")
	fd_ClientState_trusting_period = md_ClientState.Fields().ByName("trusting_period")
	fd_ClientState_unbonding_period = md_ClientState.Fields().ByName("unbonding_period")
	fd_ClientState_max_clock_drift = md_ClientState.Fields().ByName("max_clock_drift")
	fd_ClientState_latest_height = md_ClientState.Fields().ByName("latest_height")
	fd_ClientState_proof_specs = md_ClientState.Fields().ByName("proof_specs")
	fd_ClientState_merkle_prefix = md_ClientState.Fields().ByName("merkle_prefix")
	fd_ClientState_time_delay = md_ClientState.Fields().ByName("time_delay")
}

var _ protoreflect.Message = (*fastReflection_ClientState)(nil)

type fastReflection_ClientState ClientState

func (x *ClientState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ClientState)(x)
}

func (x *ClientState) slowProtoReflect() protoreflect.Message {
	mi := &file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ClientState_messageType fastReflection_ClientState_messageType
var _ protoreflect.MessageType = fastReflection_ClientState_messageType{}

type fastReflection_ClientState_messageType struct{}

func (x fastReflection_ClientState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ClientState)(nil)
}
func (x fastReflection_ClientState_messageType) New() protoreflect.Message {
	return new(fastReflection_ClientState)
}
func (x fastReflection_ClientState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ClientState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ClientState) Descriptor() protoreflect.MessageDescriptor {
	return md_ClientState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ClientState) Type() protoreflect.MessageType {
	return _fastReflection_ClientState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ClientState) New() protoreflect.Message {
	return new(fastReflection_ClientState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ClientState) Interface() protoreflect.ProtoMessage {
	return (*ClientState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ClientState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_ClientState_chain_id, value) {
			return
		}
	}
	if x.TrustLevel != nil {
		value := protoreflect.ValueOfMessage(x.TrustLevel.ProtoReflect())
		if !f(fd_ClientState_trust_level, value) {
			return
		}
	}
	if x.TrustingPeriod != nil {
		value := protoreflect.ValueOfMessage(x.TrustingPeriod.ProtoReflect())
		if !f(fd_ClientState_trusting_period, value) {
			return
		}
	}
	if x.UnbondingPeriod != nil {
		value := protoreflect.ValueOfMessage(x.UnbondingPeriod.ProtoReflect())
		if !f(fd_ClientState_unbonding_period, value) {
			return
		}
	}
	if x.MaxClockDrift != nil {
		value := protoreflect.ValueOfMessage(x.MaxClockDrift.ProtoReflect())
		if !f(fd_ClientState_max_clock_drift, value) {
			return
		}
	}
	if x.LatestHeight != nil {
		value := protoreflect.ValueOfMessage(x.LatestHeight.ProtoReflect())
		if !f(fd_ClientState_latest_height, value) {
			return
		}
	}
	if len(x.ProofSpecs) != 0 {
		value := protoreflect.ValueOfList(&_ClientState_7_list{list: &x.ProofSpecs})
		if !f(fd_ClientState_proof_specs, value) {
			return
		}
	}
	if x.MerklePrefix != nil {
		value := protoreflect.ValueOfMessage(x.MerklePrefix.ProtoReflect())
		if !f(fd_ClientState_merkle_prefix, value) {
			return
		}
	}
	if x.TimeDelay != uint64(0) {
		value := protoreflect.ValueOfUint64(x.TimeDelay)
		if !f(fd_ClientState_time_delay, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ClientState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.ClientState.chain_id":
		return x.ChainId != ""
	case "tibc.lightclients.tendermint.v1.ClientState.trust_level":
		return x.TrustLevel != nil
	case "tibc.lightclients.tendermint.v1.ClientState.trusting_period":
		return x.TrustingPeriod != nil
	case "tibc.lightclients.tendermint.v1.ClientState.unbonding_period":
		return x.UnbondingPeriod != nil
	case "tibc.lightclients.tendermint.v1.ClientState.max_clock_drift":
		return x.MaxClockDrift != nil
	case "tibc.lightclients.tendermint.v1.ClientState.latest_height":
		return x.LatestHeight != nil
	case "tibc.lightclients.tendermint.v1.ClientState.proof_specs":
		return len(x.ProofSpecs) != 0
	case "tibc.lightclients.tendermint.v1.ClientState.merkle_prefix":
		return x.MerklePrefix != nil
	case "tibc.lightclients.tendermint.v1.ClientState.time_delay":
		return x.TimeDelay != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.ClientState"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClientState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.ClientState.chain_id":
		x.ChainId = ""
	case "tibc.lightclients.tendermint.v1.ClientState.trust_level":
		x.TrustLevel = nil
	case "tibc.lightclients.tendermint.v1.ClientState.trusting_period":
		x.TrustingPeriod = nil
	case "tibc.lightclients.tendermint.v1.ClientState.unbonding_period":
		x.UnbondingPeriod = nil
	case "tibc.lightclients.tendermint.v1.ClientState.max_clock_drift":
		x.MaxClockDrift = nil
	case "tibc.lightclients.tendermint.v1.ClientState.latest_height":
		x.LatestHeight = nil
	case "tibc.lightclients.tendermint.v1.ClientState.proof_specs":
		x.ProofSpecs = nil
	case "tibc.lightclients.tendermint.v1.ClientState.merkle_prefix":
		x.MerklePrefix = nil
	case "tibc.lightclients.tendermint.v1.ClientState.time_delay":
		x.TimeDelay = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.ClientState"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ClientState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "tibc.lightclients.tendermint.v1.ClientState.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "tibc.lightclients.tendermint.v1.ClientState.trust_level":
		value := x.TrustLevel
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.trusting_period":
		value := x.TrustingPeriod
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.unbonding_period":
		value := x.UnbondingPeriod
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.max_clock_drift":
		value := x.MaxClockDrift
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.latest_height":
		value := x.LatestHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.proof_specs":
		if len(x.ProofSpecs) == 0 {
			return protoreflect.ValueOfList(&_ClientState_7_list{})
		}
		listValue := &_ClientState_7_list{list: &x.ProofSpecs}
		return protoreflect.ValueOfList(listValue)
	case "tibc.lightclients.tendermint.v1.ClientState.merkle_prefix":
		value := x.MerklePrefix
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.time_delay":
		value := x.TimeDelay
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.ClientState"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.ClientState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClientState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.ClientState.chain_id":
		x.ChainId = value.Interface().(string)
	case "tibc.lightclients.tendermint.v1.ClientState.trust_level":
		x.TrustLevel = value.Message().Interface().(*Fraction)
	case "tibc.lightclients.tendermint.v1.ClientState.trusting_period":
		x.TrustingPeriod = value.Message().Interface().(*durationpb.Duration)
	case "tibc.lightclients.tendermint.v1.ClientState.unbonding_period":
		x.UnbondingPeriod = value.Message().Interface().(*durationpb.Duration)
	case "tibc.lightclients.tendermint.v1.ClientState.max_clock_drift":
		x.MaxClockDrift = value.Message().Interface().(*durationpb.Duration)
	case "tibc.lightclients.tendermint.v1.ClientState.latest_height":
		x.LatestHeight = value.Message().Interface().(*v1.Height)
	case "tibc.lightclients.tendermint.v1.ClientState.proof_specs":
		lv := value.List()
		clv := lv.(*_ClientState_7_list)
		x.ProofSpecs = *clv.list
	case "tibc.lightclients.tendermint.v1.ClientState.merkle_prefix":
		x.MerklePrefix = value.Message().Interface().(*v11.MerklePrefix)
	case "tibc.lightclients.tendermint.v1.ClientState.time_delay":
		x.TimeDelay = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.ClientState"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClientState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.ClientState.trust_level":
		if x.TrustLevel == nil {
			x.TrustLevel = new(Fraction)
		}
		return protoreflect.ValueOfMessage(x.TrustLevel.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.trusting_period":
		if x.TrustingPeriod == nil {
			x.TrustingPeriod = new(durationpb.Duration)
		}
		return protoreflect.ValueOfMessage(x.TrustingPeriod.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.unbonding_period":
		if x.UnbondingPeriod == nil {
			x.UnbondingPeriod = new(durationpb.Duration)
		}
		return protoreflect.ValueOfMessage(x.UnbondingPeriod.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.max_clock_drift":
		if x.MaxClockDrift == nil {
			x.MaxClockDrift = new(durationpb.Duration)
		}
		return protoreflect.ValueOfMessage(x.MaxClockDrift.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.latest_height":
		if x.LatestHeight == nil {
			x.LatestHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.LatestHeight.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.proof_specs":
		if x.ProofSpecs == nil {
			x.ProofSpecs = []*_go.ProofSpec{}
		}
		value := &_ClientState_7_list{list: &x.ProofSpecs}
		return protoreflect.ValueOfList(value)
	case "tibc.lightclients.tendermint.v1.ClientState.merkle_prefix":
		if x.MerklePrefix == nil {
			x.MerklePrefix = new(v11.MerklePrefix)
		}
		return protoreflect.ValueOfMessage(x.MerklePrefix.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.chain_id":
		panic(fmt.Errorf("field chain_id of message tibc.lightclients.tendermint.v1.ClientState is not mutable"))
	case "tibc.lightclients.tendermint.v1.ClientState.time_delay":
		panic(fmt.Errorf("field time_delay of message tibc.lightclients.tendermint.v1.ClientState is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.ClientState"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ClientState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.ClientState.chain_id":
		return protoreflect.ValueOfString("")
	case "tibc.lightclients.tendermint.v1.ClientState.trust_level":
		m := new(Fraction)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.trusting_period":
		m := new(durationpb.Duration)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.unbonding_period":
		m := new(durationpb.Duration)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.max_clock_drift":
		m := new(durationpb.Duration)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.latest_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.proof_specs":
		list := []*_go.ProofSpec{}
		return protoreflect.ValueOfList(&_ClientState_7_list{list: &list})
	case "tibc.lightclients.tendermint.v1.ClientState.merkle_prefix":
		m := new(v11.MerklePrefix)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ClientState.time_delay":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.ClientState"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ClientState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in tibc.lightclients.tendermint.v1.ClientState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ClientState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClientState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ClientState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ClientState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ClientState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TrustLevel != nil {
			l = options.Size(x.TrustLevel)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TrustingPeriod != nil {
			l = options.Size(x.TrustingPeriod)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UnbondingPeriod != nil {
			l = options.Size(x.UnbondingPeriod)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.MaxClockDrift != nil {
			l = options.Size(x.MaxClockDrift)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LatestHeight != nil {
			l = options.Size(x.LatestHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.ProofSpecs) > 0 {
			for _, e := range x.ProofSpecs {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.MerklePrefix != nil {
			l = options.Size(x.MerklePrefix)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TimeDelay != 0 {
			n += 1 + runtime.Sov(uint64(x.TimeDelay))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ClientState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TimeDelay != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.TimeDelay))
			i--
			dAtA[i] = 0x48
		}
		if x.MerklePrefix != nil {
			encoded, err := options.Marshal(x.MerklePrefix)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.ProofSpecs) > 0 {
			for iNdEx := len(x.ProofSpecs) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.ProofSpecs[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x3a
			}
		}
		if x.LatestHeight != nil {
			encoded, err := options.Marshal(x.LatestHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.MaxClockDrift != nil {
			encoded, err := options.Marshal(x.MaxClockDrift)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.UnbondingPeriod != nil {
			encoded, err := options.Marshal(x.UnbondingPeriod)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.TrustingPeriod != nil {
			encoded, err := options.Marshal(x.TrustingPeriod)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.TrustLevel != nil {
			encoded, err := options.Marshal(x.TrustLevel)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ClientState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClientState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClientState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TrustLevel", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TrustLevel == nil {
					x.TrustLevel = &Fraction{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TrustLevel); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TrustingPeriod", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TrustingPeriod == nil {
					x.TrustingPeriod = &durationpb.Duration{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TrustingPeriod); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnbondingPeriod", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.UnbondingPeriod == nil {
					x.UnbondingPeriod = &durationpb.Duration{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.UnbondingPeriod); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxClockDrift", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.MaxClockDrift == nil {
					x.MaxClockDrift = &durationpb.Duration{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.MaxClockDrift); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.LatestHeight == nil {
					x.LatestHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LatestHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProofSpecs", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProofSpecs = append(x.ProofSpecs, &_go.ProofSpec{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProofSpecs[len(x.ProofSpecs)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MerklePrefix", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.MerklePrefix == nil {
					x.MerklePrefix = &v11.MerklePrefix{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.MerklePrefix); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TimeDelay", wireType)
				}
				x.TimeDelay = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.TimeDelay |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ConsensusState                      protoreflect.MessageDescriptor
	fd_ConsensusState_timestamp            protoreflect.FieldDescriptor
	fd_ConsensusState_root                 protoreflect.FieldDescriptor
	fd_ConsensusState_next_validators_hash protoreflect.FieldDescriptor
)

func init() {
	file_tibc_lightclients_tendermint_v1_tendermint_proto_init()
	md_ConsensusState = File_tibc_lightclients_tendermint_v1_tendermint_proto.Messages().ByName("ConsensusState")
	fd_ConsensusState_timestamp = md_ConsensusState.Fields().ByName("timestamp")
	fd_ConsensusState_root = md_ConsensusState.Fields().ByName("root")
	fd_ConsensusState_next_validators_hash = md_ConsensusState.Fields().ByName("next_validators_hash")
}

var _ protoreflect.Message = (*fastReflection_ConsensusState)(nil)

type fastReflection_ConsensusState ConsensusState

func (x *ConsensusState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ConsensusState)(x)
}

func (x *ConsensusState) slowProtoReflect() protoreflect.Message {
	mi := &file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ConsensusState_messageType fastReflection_ConsensusState_messageType
var _ protoreflect.MessageType = fastReflection_ConsensusState_messageType{}

type fastReflection_ConsensusState_messageType struct{}

func (x fastReflection_ConsensusState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ConsensusState)(nil)
}
func (x fastReflection_ConsensusState_messageType) New() protoreflect.Message {
	return new(fastReflection_ConsensusState)
}
func (x fastReflection_ConsensusState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ConsensusState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ConsensusState) Descriptor() protoreflect.MessageDescriptor {
	return md_ConsensusState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ConsensusState) Type() protoreflect.MessageType {
	return _fastReflection_ConsensusState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ConsensusState) New() protoreflect.Message {
	return new(fastReflection_ConsensusState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ConsensusState) Interface() protoreflect.ProtoMessage {
	return (*ConsensusState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ConsensusState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Timestamp != nil {
		value := protoreflect.ValueOfMessage(x.Timestamp.ProtoReflect())
		if !f(fd_ConsensusState_timestamp, value) {
			return
		}
	}
	if x.Root != nil {
		value := protoreflect.ValueOfMessage(x.Root.ProtoReflect())
		if !f(fd_ConsensusState_root, value) {
			return
		}
	}
	if len(x.NextValidatorsHash) != 0 {
		value := protoreflect.ValueOfBytes(x.NextValidatorsHash)
		if !f(fd_ConsensusState_next_validators_hash, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ConsensusState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.ConsensusState.timestamp":
		return x.Timestamp != nil
	case "tibc.lightclients.tendermint.v1.ConsensusState.root":
		return x.Root != nil
	case "tibc.lightclients.tendermint.v1.ConsensusState.next_validators_hash":
		return len(x.NextValidatorsHash) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsensusState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.ConsensusState.timestamp":
		x.Timestamp = nil
	case "tibc.lightclients.tendermint.v1.ConsensusState.root":
		x.Root = nil
	case "tibc.lightclients.tendermint.v1.ConsensusState.next_validators_hash":
		x.NextValidatorsHash = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ConsensusState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "tibc.lightclients.tendermint.v1.ConsensusState.timestamp":
		value := x.Timestamp
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ConsensusState.root":
		value := x.Root
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ConsensusState.next_validators_hash":
		value := x.NextValidatorsHash
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.ConsensusState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsensusState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.ConsensusState.timestamp":
		x.Timestamp = value.Message().Interface().(*timestamppb.Timestamp)
	case "tibc.lightclients.tendermint.v1.ConsensusState.root":
		x.Root = value.Message().Interface().(*v11.MerkleRoot)
	case "tibc.lightclients.tendermint.v1.ConsensusState.next_validators_hash":
		x.NextValidatorsHash = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsensusState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.ConsensusState.timestamp":
		if x.Timestamp == nil {
			x.Timestamp = new(timestamppb.Timestamp)
		}
		return protoreflect.ValueOfMessage(x.Timestamp.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ConsensusState.root":
		if x.Root == nil {
			x.Root = new(v11.MerkleRoot)
		}
		return protoreflect.ValueOfMessage(x.Root.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ConsensusState.next_validators_hash":
		panic(fmt.Errorf("field next_validators_hash of message tibc.lightclients.tendermint.v1.ConsensusState is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ConsensusState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.ConsensusState.timestamp":
		m := new(timestamppb.Timestamp)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ConsensusState.root":
		m := new(v11.MerkleRoot)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.ConsensusState.next_validators_hash":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ConsensusState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in tibc.lightclients.tendermint.v1.ConsensusState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ConsensusState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsensusState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ConsensusState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ConsensusState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ConsensusState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Timestamp != nil {
			l = options.Size(x.Timestamp)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Root != nil {
			l = options.Size(x.Root)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.NextValidatorsHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ConsensusState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.NextValidatorsHash) > 0 {
			i -= len(x.NextValidatorsHash)
			copy(dAtA[i:], x.NextValidatorsHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NextValidatorsHash)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Root != nil {
			encoded, err := options.Marshal(x.Root)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.Timestamp != nil {
			encoded, err := options.Marshal(x.Timestamp)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ConsensusState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ConsensusState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ConsensusState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Timestamp == nil {
					x.Timestamp = &timestamppb.Timestamp{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Timestamp); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Root", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Root == nil {
					x.Root = &v11.MerkleRoot{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Root); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NextValidatorsHash", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NextValidatorsHash = append(x.NextValidatorsHash[:0], dAtA[iNdEx:postIndex]...)
				if x.NextValidatorsHash == nil {
					x.NextValidatorsHash = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Header                    protoreflect.MessageDescriptor
	fd_Header_signed_header      protoreflect.FieldDescriptor
	fd_Header_validator_set      protoreflect.FieldDescriptor
	fd_Header_trusted_height     protoreflect.FieldDescriptor
	fd_Header_trusted_validators protoreflect.FieldDescriptor
)

func init() {
	file_tibc_lightclients_tendermint_v1_tendermint_proto_init()
	md_Header = File_tibc_lightclients_tendermint_v1_tendermint_proto.Messages().ByName("Header")
	fd_Header_signed_header = md_Header.Fields().ByName("signed_header")
	fd_Header_validator_set = md_Header.Fields().ByName("validator_set")
	fd_Header_trusted_height = md_Header.Fields().ByName("trusted_height")
	fd_Header_trusted_validators = md_Header.Fields().ByName("trusted_validators")
}

var _ protoreflect.Message = (*fastReflection_Header)(nil)

type fastReflection_Header Header

func (x *Header) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Header)(x)
}

func (x *Header) slowProtoReflect() protoreflect.Message {
	mi := &file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Header_messageType fastReflection_Header_messageType
var _ protoreflect.MessageType = fastReflection_Header_messageType{}

type fastReflection_Header_messageType struct{}

func (x fastReflection_Header_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Header)(nil)
}
func (x fastReflection_Header_messageType) New() protoreflect.Message {
	return new(fastReflection_Header)
}
func (x fastReflection_Header_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Header
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Header) Descriptor() protoreflect.MessageDescriptor {
	return md_Header
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Header) Type() protoreflect.MessageType {
	return _fastReflection_Header_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Header) New() protoreflect.Message {
	return new(fastReflection_Header)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Header) Interface() protoreflect.ProtoMessage {
	return (*Header)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Header) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.SignedHeader != nil {
		value := protoreflect.ValueOfMessage(x.SignedHeader.ProtoReflect())
		if !f(fd_Header_signed_header, value) {
			return
		}
	}
	if x.ValidatorSet != nil {
		value := protoreflect.ValueOfMessage(x.ValidatorSet.ProtoReflect())
		if !f(fd_Header_validator_set, value) {
			return
		}
	}
	if x.TrustedHeight != nil {
		value := protoreflect.ValueOfMessage(x.TrustedHeight.ProtoReflect())
		if !f(fd_Header_trusted_height, value) {
			return
		}
	}
	if x.TrustedValidators != nil {
		value := protoreflect.ValueOfMessage(x.TrustedValidators.ProtoReflect())
		if !f(fd_Header_trusted_validators, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Header) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.Header.signed_header":
		return x.SignedHeader != nil
	case "tibc.lightclients.tendermint.v1.Header.validator_set":
		return x.ValidatorSet != nil
	case "tibc.lightclients.tendermint.v1.Header.trusted_height":
		return x.TrustedHeight != nil
	case "tibc.lightclients.tendermint.v1.Header.trusted_validators":
		return x.TrustedValidators != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.Header"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.Header does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Header) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.Header.signed_header":
		x.SignedHeader = nil
	case "tibc.lightclients.tendermint.v1.Header.validator_set":
		x.ValidatorSet = nil
	case "tibc.lightclients.tendermint.v1.Header.trusted_height":
		x.TrustedHeight = nil
	case "tibc.lightclients.tendermint.v1.Header.trusted_validators":
		x.TrustedValidators = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.Header"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.Header does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Header) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "tibc.lightclients.tendermint.v1.Header.signed_header":
		value := x.SignedHeader
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.Header.validator_set":
		value := x.ValidatorSet
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.Header.trusted_height":
		value := x.TrustedHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.Header.trusted_validators":
		value := x.TrustedValidators
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.Header"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.Header does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Header) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.Header.signed_header":
		x.SignedHeader = value.Message().Interface().(*types.SignedHeader)
	case "tibc.lightclients.tendermint.v1.Header.validator_set":
		x.ValidatorSet = value.Message().Interface().(*types.ValidatorSet)
	case "tibc.lightclients.tendermint.v1.Header.trusted_height":
		x.TrustedHeight = value.Message().Interface().(*v1.Height)
	case "tibc.lightclients.tendermint.v1.Header.trusted_validators":
		x.TrustedValidators = value.Message().Interface().(*types.ValidatorSet)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.Header"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.Header does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Header) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.Header.signed_header":
		if x.SignedHeader == nil {
			x.SignedHeader = new(types.SignedHeader)
		}
		return protoreflect.ValueOfMessage(x.SignedHeader.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.Header.validator_set":
		if x.ValidatorSet == nil {
			x.ValidatorSet = new(types.ValidatorSet)
		}
		return protoreflect.ValueOfMessage(x.ValidatorSet.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.Header.trusted_height":
		if x.TrustedHeight == nil {
			x.TrustedHeight = new(v1.Height)
		}
		return protoreflect.ValueOfMessage(x.TrustedHeight.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.Header.trusted_validators":
		if x.TrustedValidators == nil {
			x.TrustedValidators = new(types.ValidatorSet)
		}
		return protoreflect.ValueOfMessage(x.TrustedValidators.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.Header"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.Header does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Header) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.Header.signed_header":
		m := new(types.SignedHeader)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.Header.validator_set":
		m := new(types.ValidatorSet)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.Header.trusted_height":
		m := new(v1.Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "tibc.lightclients.tendermint.v1.Header.trusted_validators":
		m := new(types.ValidatorSet)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.Header"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.Header does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Header) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in tibc.lightclients.tendermint.v1.Header", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Header) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Header) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Header) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Header) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Header)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.SignedHeader != nil {
			l = options.Size(x.SignedHeader)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ValidatorSet != nil {
			l = options.Size(x.ValidatorSet)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TrustedHeight != nil {
			l = options.Size(x.TrustedHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TrustedValidators != nil {
			l = options.Size(x.TrustedValidators)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Header)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TrustedValidators != nil {
			encoded, err := options.Marshal(x.TrustedValidators)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.TrustedHeight != nil {
			encoded, err := options.Marshal(x.TrustedHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.ValidatorSet != nil {
			encoded, err := options.Marshal(x.ValidatorSet)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.SignedHeader != nil {
			encoded, err := options.Marshal(x.SignedHeader)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Header)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Header: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Header: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignedHeader", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.SignedHeader == nil {
					x.SignedHeader = &types.SignedHeader{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SignedHeader); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorSet", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ValidatorSet == nil {
					x.ValidatorSet = &types.ValidatorSet{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ValidatorSet); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TrustedHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TrustedHeight == nil {
					x.TrustedHeight = &v1.Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TrustedHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TrustedValidators", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TrustedValidators == nil {
					x.TrustedValidators = &types.ValidatorSet{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TrustedValidators); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Fraction             protoreflect.MessageDescriptor
	fd_Fraction_numerator   protoreflect.FieldDescriptor
	fd_Fraction_denominator protoreflect.FieldDescriptor
)

func init() {
	file_tibc_lightclients_tendermint_v1_tendermint_proto_init()
	md_Fraction = File_tibc_lightclients_tendermint_v1_tendermint_proto.Messages().ByName("Fraction")
	fd_Fraction_numerator = md_Fraction.Fields().ByName("numerator")
	fd_Fraction_denominator = md_Fraction.Fields().ByName("denominator")
}

var _ protoreflect.Message = (*fastReflection_Fraction)(nil)

type fastReflection_Fraction Fraction

func (x *Fraction) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Fraction)(x)
}

func (x *Fraction) slowProtoReflect() protoreflect.Message {
	mi := &file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Fraction_messageType fastReflection_Fraction_messageType
var _ protoreflect.MessageType = fastReflection_Fraction_messageType{}

type fastReflection_Fraction_messageType struct{}

func (x fastReflection_Fraction_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Fraction)(nil)
}
func (x fastReflection_Fraction_messageType) New() protoreflect.Message {
	return new(fastReflection_Fraction)
}
func (x fastReflection_Fraction_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Fraction
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Fraction) Descriptor() protoreflect.MessageDescriptor {
	return md_Fraction
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Fraction) Type() protoreflect.MessageType {
	return _fastReflection_Fraction_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Fraction) New() protoreflect.Message {
	return new(fastReflection_Fraction)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Fraction) Interface() protoreflect.ProtoMessage {
	return (*Fraction)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Fraction) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Numerator != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Numerator)
		if !f(fd_Fraction_numerator, value) {
			return
		}
	}
	if x.Denominator != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Denominator)
		if !f(fd_Fraction_denominator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Fraction) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.Fraction.numerator":
		return x.Numerator != uint64(0)
	case "tibc.lightclients.tendermint.v1.Fraction.denominator":
		return x.Denominator != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.Fraction"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.Fraction does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Fraction) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.Fraction.numerator":
		x.Numerator = uint64(0)
	case "tibc.lightclients.tendermint.v1.Fraction.denominator":
		x.Denominator = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.Fraction"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.Fraction does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Fraction) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "tibc.lightclients.tendermint.v1.Fraction.numerator":
		value := x.Numerator
		return protoreflect.ValueOfUint64(value)
	case "tibc.lightclients.tendermint.v1.Fraction.denominator":
		value := x.Denominator
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.Fraction"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.Fraction does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Fraction) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.Fraction.numerator":
		x.Numerator = value.Uint()
	case "tibc.lightclients.tendermint.v1.Fraction.denominator":
		x.Denominator = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.Fraction"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.Fraction does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Fraction) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.Fraction.numerator":
		panic(fmt.Errorf("field numerator of message tibc.lightclients.tendermint.v1.Fraction is not mutable"))
	case "tibc.lightclients.tendermint.v1.Fraction.denominator":
		panic(fmt.Errorf("field denominator of message tibc.lightclients.tendermint.v1.Fraction is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.Fraction"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.Fraction does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Fraction) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "tibc.lightclients.tendermint.v1.Fraction.numerator":
		return protoreflect.ValueOfUint64(uint64(0))
	case "tibc.lightclients.tendermint.v1.Fraction.denominator":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: tibc.lightclients.tendermint.v1.Fraction"))
		}
		panic(fmt.Errorf("message tibc.lightclients.tendermint.v1.Fraction does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Fraction) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in tibc.lightclients.tendermint.v1.Fraction", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Fraction) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Fraction) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Fraction) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Fraction) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Fraction)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Numerator != 0 {
			n += 1 + runtime.Sov(uint64(x.Numerator))
		}
		if x.Denominator != 0 {
			n += 1 + runtime.Sov(uint64(x.Denominator))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Fraction)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Denominator != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Denominator))
			i--
			dAtA[i] = 0x10
		}
		if x.Numerator != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Numerator))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Fraction)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Fraction: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Fraction: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Numerator", wireType)
				}
				x.Numerator = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Numerator |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denominator", wireType)
				}
				x.Denominator = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Denominator |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: tibc/lightclients/tendermint/v1/tendermint.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ClientState from Tendermint tracks the current validator set, latest height,
// and a possible frozen height.
type ClientState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId    string    `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	TrustLevel *Fraction `protobuf:"bytes,2,opt,name=trust_level,json=trustLevel,proto3" json:"trust_level,omitempty"`
	// duration of the period since the LastestTimestamp during which the
	// submitted headers are valid for upgrade
	TrustingPeriod *durationpb.Duration `protobuf:"bytes,3,opt,name=trusting_period,json=trustingPeriod,proto3" json:"trusting_period,omitempty"`
	// duration of the staking unbonding period
	UnbondingPeriod *durationpb.Duration `protobuf:"bytes,4,opt,name=unbonding_period,json=unbondingPeriod,proto3" json:"unbonding_period,omitempty"`
	// defines how much new (untrusted) header's Time can drift into the future.
	MaxClockDrift *durationpb.Duration `protobuf:"bytes,5,opt,name=max_clock_drift,json=maxClockDrift,proto3" json:"max_clock_drift,omitempty"`
	// latest height the client was updated to
	LatestHeight *v1.Height `protobuf:"bytes,6,opt,name=latest_height,json=latestHeight,proto3" json:"latest_height,omitempty"`
	// proof specifications used in verifying counterparty state
	ProofSpecs []*_go.ProofSpec `protobuf:"bytes,7,rep,name=proof_specs,json=proofSpecs,proto3" json:"proof_specs,omitempty"`
	// merkle_prefix merkle prefix of the counterparty chain.
	MerklePrefix *v11.MerklePrefix `protobuf:"bytes,8,opt,name=merkle_prefix,json=merklePrefix,proto3" json:"merkle_prefix,omitempty"`
	// period of transaction confirmation delay
	TimeDelay uint64 `protobuf:"varint,9,opt,name=time_delay,json=timeDelay,proto3" json:"time_delay,omitempty"`
}

func (x *ClientState) Reset() {
	*x = ClientState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientState) ProtoMessage() {}

// Deprecated: Use ClientState.ProtoReflect.Descriptor instead.
func (*ClientState) Descriptor() ([]byte, []int) {
	return file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDescGZIP(), []int{0}
}

func (x *ClientState) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *ClientState) GetTrustLevel() *Fraction {
	if x != nil {
		return x.TrustLevel
	}
	return nil
}

func (x *ClientState) GetTrustingPeriod() *durationpb.Duration {
	if x != nil {
		return x.TrustingPeriod
	}
	return nil
}

func (x *ClientState) GetUnbondingPeriod() *durationpb.Duration {
	if x != nil {
		return x.UnbondingPeriod
	}
	return nil
}

func (x *ClientState) GetMaxClockDrift() *durationpb.Duration {
	if x != nil {
		return x.MaxClockDrift
	}
	return nil
}

func (x *ClientState) GetLatestHeight() *v1.Height {
	if x != nil {
		return x.LatestHeight
	}
	return nil
}

func (x *ClientState) GetProofSpecs() []*_go.ProofSpec {
	if x != nil {
		return x.ProofSpecs
	}
	return nil
}

func (x *ClientState) GetMerklePrefix() *v11.MerklePrefix {
	if x != nil {
		return x.MerklePrefix
	}
	return nil
}

func (x *ClientState) GetTimeDelay() uint64 {
	if x != nil {
		return x.TimeDelay
	}
	return 0
}

// ConsensusState defines the consensus state from Tendermint.
type ConsensusState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// timestamp that corresponds to the block height in which the ConsensusState
	// was stored.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// commitment root (i.e app hash)
	Root               *v11.MerkleRoot `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
	NextValidatorsHash []byte          `protobuf:"bytes,3,opt,name=next_validators_hash,json=nextValidatorsHash,proto3" json:"next_validators_hash,omitempty"`
}

func (x *ConsensusState) Reset() {
	*x = ConsensusState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsensusState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusState) ProtoMessage() {}

// Deprecated: Use ConsensusState.ProtoReflect.Descriptor instead.
func (*ConsensusState) Descriptor() ([]byte, []int) {
	return file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDescGZIP(), []int{1}
}

func (x *ConsensusState) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ConsensusState) GetRoot() *v11.MerkleRoot {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *ConsensusState) GetNextValidatorsHash() []byte {
	if x != nil {
		return x.NextValidatorsHash
	}
	return nil
}

// Header defines the Tendermint client consensus Header.
// It encapsulates all the information necessary to update from a trusted
// Tendermint ConsensusState. The inclusion of TrustedHeight and
// TrustedValidators allows this update to process correctly, so long as the
// ConsensusState for the TrustedHeight exists, this removes race conditions
// among relayers The SignedHeader and ValidatorSet are the new untrusted update
// fields for the client. The TrustedHeight is the height of a stored
// ConsensusState on the client that will be used to verify the new untrusted
// header. The Trusted ConsensusState must be within the unbonding period of
// current time in order to correctly verify, and the TrustedValidators must
// hash to TrustedConsensusState.NextValidatorsHash since that is the last
// trusted validator set at the TrustedHeight.
type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedHeader      *types.SignedHeader `protobuf:"bytes,1,opt,name=signed_header,json=signedHeader,proto3" json:"signed_header,omitempty"`
	ValidatorSet      *types.ValidatorSet `protobuf:"bytes,2,opt,name=validator_set,json=validatorSet,proto3" json:"validator_set,omitempty"`
	TrustedHeight     *v1.Height          `protobuf:"bytes,3,opt,name=trusted_height,json=trustedHeight,proto3" json:"trusted_height,omitempty"`
	TrustedValidators *types.ValidatorSet `protobuf:"bytes,4,opt,name=trusted_validators,json=trustedValidators,proto3" json:"trusted_validators,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDescGZIP(), []int{2}
}

func (x *Header) GetSignedHeader() *types.SignedHeader {
	if x != nil {
		return x.SignedHeader
	}
	return nil
}

func (x *Header) GetValidatorSet() *types.ValidatorSet {
	if x != nil {
		return x.ValidatorSet
	}
	return nil
}

func (x *Header) GetTrustedHeight() *v1.Height {
	if x != nil {
		return x.TrustedHeight
	}
	return nil
}

func (x *Header) GetTrustedValidators() *types.ValidatorSet {
	if x != nil {
		return x.TrustedValidators
	}
	return nil
}

// Fraction defines the protobuf message type for tmmath.Fraction that only
// supports positive values.
type Fraction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numerator   uint64 `protobuf:"varint,1,opt,name=numerator,proto3" json:"numerator,omitempty"`
	Denominator uint64 `protobuf:"varint,2,opt,name=denominator,proto3" json:"denominator,omitempty"`
}

func (x *Fraction) Reset() {
	*x = Fraction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fraction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fraction) ProtoMessage() {}

// Deprecated: Use Fraction.ProtoReflect.Descriptor instead.
func (*Fraction) Descriptor() ([]byte, []int) {
	return file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDescGZIP(), []int{3}
}

func (x *Fraction) GetNumerator() uint64 {
	if x != nil {
		return x.Numerator
	}
	return 0
}

func (x *Fraction) GetDenominator() uint64 {
	if x != nil {
		return x.Denominator
	}
	return 0
}

var File_tibc_lightclients_tendermint_v1_tendermint_proto protoreflect.FileDescriptor

var file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDesc = []byte{
	0x0a, 0x30, 0x74, 0x69, 0x62, 0x63, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1f, 0x74, 0x69, 0x62, 0x63, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x1a, 0x20, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x69, 0x63, 0x73, 0x32,
	0x33, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x74, 0x69, 0x62, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x74, 0x69, 0x62, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x04, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x50, 0x0a, 0x0b, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x69, 0x62, 0x63, 0x2e, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x4c, 0x0a, 0x0f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x98, 0xdf, 0x1f, 0x01, 0x52,
	0x0e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x4e, 0x0a, 0x10, 0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x98, 0xdf, 0x1f, 0x01, 0x52, 0x0f,
	0x75, 0x6e, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x4b, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x72, 0x69,
	0x66, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00, 0x98, 0xdf, 0x1f, 0x01, 0x52, 0x0d, 0x6d,
	0x61, 0x78, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x72, 0x69, 0x66, 0x74, 0x12, 0x46, 0x0a, 0x0d,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x69, 0x63, 0x73, 0x32, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x53, 0x70, 0x65, 0x63,
	0x73, 0x12, 0x50, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x69, 0x62, 0x63, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c,
	0x61, 0x79, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0x81, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xc8, 0xde, 0x1f, 0x00,
	0x90, 0xdf, 0x1f, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x3d, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x74, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f,
	0x6f, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x66,
	0x0a, 0x14, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x34, 0xfa, 0xde,
	0x1f, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6d,
	0x65, 0x74, 0x62, 0x66, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x62, 0x66, 0x74, 0x2f, 0x6c,
	0x69, 0x62, 0x73, 0x2f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x2e, 0x48, 0x65, 0x78, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x48, 0x61, 0x73, 0x68, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xb1, 0x02, 0x0a,
	0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x04,
	0xd0, 0xde, 0x1f, 0x01, 0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x43, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x12, 0x48, 0x0a, 0x0e, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x74, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x4d, 0x0a, 0x12, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x52, 0x11, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x22, 0x4a, 0x0a, 0x08, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x42, 0xa4, 0x02, 0x0a,
	0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x62, 0x63, 0x2e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x54, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x61, 0x6e, 0x6a, 0x69, 0x65, 0x61, 0x69, 0x2f, 0x74, 0x69,
	0x62, 0x63, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x69, 0x62, 0x63, 0x2f, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x74, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x4c, 0x54, 0xaa, 0x02, 0x1f, 0x54,
	0x69, 0x62, 0x63, 0x2e, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x54, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x1f, 0x54, 0x69, 0x62, 0x63, 0x5c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x5c, 0x54, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x2b, 0x54, 0x69, 0x62, 0x63, 0x5c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x5c, 0x54, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x22, 0x54, 0x69, 0x62, 0x63, 0x3a, 0x3a, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x3a, 0x3a, 0x54, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDescOnce sync.Once
	file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDescData = file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDesc
)

func file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDescGZIP() []byte {
	file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDescOnce.Do(func() {
		file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDescData = protoimpl.X.CompressGZIP(file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDescData)
	})
	return file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDescData
}

var file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_tibc_lightclients_tendermint_v1_tendermint_proto_goTypes = []interface{}{
	(*ClientState)(nil),           // 0: tibc.lightclients.tendermint.v1.ClientState
	(*ConsensusState)(nil),        // 1: tibc.lightclients.tendermint.v1.ConsensusState
	(*Header)(nil),                // 2: tibc.lightclients.tendermint.v1.Header
	(*Fraction)(nil),              // 3: tibc.lightclients.tendermint.v1.Fraction
	(*durationpb.Duration)(nil),   // 4: google.protobuf.Duration
	(*v1.Height)(nil),             // 5: tibc.core.client.v1.Height
	(*_go.ProofSpec)(nil),         // 6: cosmos.ics23.v1.ProofSpec
	(*v11.MerklePrefix)(nil),      // 7: tibc.core.commitment.v1.MerklePrefix
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
	(*v11.MerkleRoot)(nil),        // 9: tibc.core.commitment.v1.MerkleRoot
	(*types.SignedHeader)(nil),    // 10: tendermint.types.SignedHeader
	(*types.ValidatorSet)(nil),    // 11: tendermint.types.ValidatorSet
}
var file_tibc_lightclients_tendermint_v1_tendermint_proto_depIdxs = []int32{
	3,  // 0: tibc.lightclients.tendermint.v1.ClientState.trust_level:type_name -> tibc.lightclients.tendermint.v1.Fraction
	4,  // 1: tibc.lightclients.tendermint.v1.ClientState.trusting_period:type_name -> google.protobuf.Duration
	4,  // 2: tibc.lightclients.tendermint.v1.ClientState.unbonding_period:type_name -> google.protobuf.Duration
	4,  // 3: tibc.lightclients.tendermint.v1.ClientState.max_clock_drift:type_name -> google.protobuf.Duration
	5,  // 4: tibc.lightclients.tendermint.v1.ClientState.latest_height:type_name -> tibc.core.client.v1.Height
	6,  // 5: tibc.lightclients.tendermint.v1.ClientState.proof_specs:type_name -> cosmos.ics23.v1.ProofSpec
	7,  // 6: tibc.lightclients.tendermint.v1.ClientState.merkle_prefix:type_name -> tibc.core.commitment.v1.MerklePrefix
	8,  // 7: tibc.lightclients.tendermint.v1.ConsensusState.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 8: tibc.lightclients.tendermint.v1.ConsensusState.root:type_name -> tibc.core.commitment.v1.MerkleRoot
	10, // 9: tibc.lightclients.tendermint.v1.Header.signed_header:type_name -> tendermint.types.SignedHeader
	11, // 10: tibc.lightclients.tendermint.v1.Header.validator_set:type_name -> tendermint.types.ValidatorSet
	5,  // 11: tibc.lightclients.tendermint.v1.Header.trusted_height:type_name -> tibc.core.client.v1.Height
	11, // 12: tibc.lightclients.tendermint.v1.Header.trusted_validators:type_name -> tendermint.types.ValidatorSet
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_tibc_lightclients_tendermint_v1_tendermint_proto_init() }
func file_tibc_lightclients_tendermint_v1_tendermint_proto_init() {
	if File_tibc_lightclients_tendermint_v1_tendermint_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsensusState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fraction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tibc_lightclients_tendermint_v1_tendermint_proto_goTypes,
		DependencyIndexes: file_tibc_lightclients_tendermint_v1_tendermint_proto_depIdxs,
		MessageInfos:      file_tibc_lightclients_tendermint_v1_tendermint_proto_msgTypes,
	}.Build()
	File_tibc_lightclients_tendermint_v1_tendermint_proto = out.File
	file_tibc_lightclients_tendermint_v1_tendermint_proto_rawDesc = nil
	file_tibc_lightclients_tendermint_v1_tendermint_proto_goTypes = nil
	file_tibc_lightclients_tendermint_v1_tendermint_proto_depIdxs = nil
}
