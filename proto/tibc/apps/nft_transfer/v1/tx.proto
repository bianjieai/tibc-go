syntax = "proto3";
package tibc.apps.nft_transfer.v1;

option go_package = "github.com/bianjieai/tibc-go/modules/tibc/apps/nft_transfer/types";

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";

// Msg defines the tibc/nftTransfer Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // NftTransfer defines a rpc handler method for MsgNftTransfer.
  rpc NftTransfer(MsgNftTransfer) returns (MsgNftTransferResponse);
}

// MsgNftTransfer defines the Msg/NftTransfer request type.
message MsgNftTransfer {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (cosmos.msg.v1.signer) = "sender";

  // the class to which the NFT to be transferred belongs
  string class = 1;
  // the nft id
  string id = 2;
  // the nft sender
  string sender = 3;
  // the nft receiver
  string receiver = 4;
  // target chain of transmission
  string dest_chain = 5;
  // relay chain during transmission
  string realay_chain = 6;
  // the destination contract address to receive the nft
  string dest_contract = 7;
}

// MsgTransferResponse defines the Msg/NftTransfer response type.
message MsgNftTransferResponse {}